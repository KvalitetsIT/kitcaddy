fullnameOverride: pexip-history
namespace: pexip

extraConfigMapJson:
  test.json:
    [
      {
        "organizationId": "123",
        "organization":  "test",
        "secretKeyLocation": "key.txt"
      }
    ]

podAnnotations:
  prometheus.io/path: /history/actuator/prometheus
  prometheus.io/port: "8080"
  prometheus.io/scrape: "true"

imagePullSecrets:
  - name: kit4medcom
image:
  repository: kvalitetsit/medcom-vdx-pexip-history
  pullPolicy: IfNotPresent
  tag: "1.1.1"

serviceAccount:
  create: false

deploymentStrategy: Recreate

kitcaddy:
  secretName: sts-public-cert
  extraVolumeMounts:
    sts-public-cert:
      mountPath: /trust
  extraVolumes:
    sts-public-cert: |
      secret:
        secretName: sts-public-cert

  extraPorts:
    proxy-port7070: 7070

  apps:
    tls:
      certificates:
        loadfiles:
          - certificate: /certificates/server.cert
            key: /certificates/server.key
            format: pem
            tags:
          - certificate: /certificates/server.cert
            key: /certificates/server.key
            format: pem
            tags:
              - xyz
              - abc

  servers:
    pexip-wsp:
      listenPort: 80
      name: pexip-wsp
      strictSniHost:
        value: false
      tlsConnectionPolicies:
        clientAuthentication:
          require: true
      automaticHttps:
        disableRedirects: true

      routes:
        meet:
          paths:
            - /meet/*
          upstream:
            host: localhost
            port: 8080
        host:
          paths:
            - /host/*
          prometheus:
            path: /metrics
          wsp:
            mongoHost: mongodb.mongo
            mongoDb: pexip-history-wsp
            audienceRestriction: urn:pexip-history:vconf:dk
            sessiondataHeadername: sessiondataheader
            hok: true
            trusts:
              - /trust/sts.cer
            sslClientCertHeaderNames:
              - surviving-bogus-header
              - forwarded-from-nginx
          wsc:
            mongoHost: mongodb.mongo
            mongoDb: pexip-history-wsc
            sessionHeaderName: test123
            stsUrl: mysts.host/sts
            clientCertFile: /trust/client.cer
            clientKeyFile: /trust/client.key
            trustCertFiles:
              - /trust/cert.cer
            serviceEndpoint: https://host:port/endpoint
            serviceAudience: serviceAudience
            sessionDataUrl: session_data_url
          saml:
            mongoHost: mongodb.mongo
            mongoDb: m-sp
            sessionHeaderName: sessionid
            sessiondataHeadername: sessiondataheader
            sessionExpiryHours: 1
            audienceRestriction: urn:m:vdxapi:dk
            idpMetadataUrl: https://login.vdxapi.dk/auth/realms/broker/protocol/saml/descriptor
            entityId: urn:m:vdxapi:dk
            signAuthnReq: true
            signCertFile: /certificate/tls.crt
            signKeyFile: /certificate/tls.key
            externalUrl: https://m.vdxapi.dk
            metadataPath: /host/saml/metadata
            logoutPath: /host/saml/logout
            sloPath: /host/saml/slo
            ssoPath: /host/saml/sso
            logoutLandingPage: https://m.vdxapi.dk/meet
            cookieDomain: m.vdxapi.dk
            cookiePath: /

          upstream:
            host: localhost
            port: 8080
            clientTls:
              insecureSkipVerify: true
              clientCertificateFile: WSC_CLIENT_CERTIFICATE_FILE
              clientCertificateKeyFile: WSC_CLIENT_KEY_FILE
    pexip-wsp2:
      listenPort: 80443
      name: pexip-wsp2
      routes:
        h:
          paths:
            - /h
          prometheus:
            path: /metrics
          wsp:
            mongoHost: mongodb.mongo123
            mongoDb: pexip-history-wsp123
            audienceRestriction: urn:pexip-history:vconf:dk123
            sessiondataHeadername: sessiondataheader123
            hok: true132
            trusts:
              - /trust/sts.cer132
          upstream:
            host: localhost123
            port: 8080132

deployment:
  configMapMountPath: /config
  extraVolumeMounts:
    test123:
      mountPath: /123

  containerPort: 8080
  env:
    nats.url:
      value: nats://nats:4222
    nats.subject:
      value: PexipEvent
    nats.clusterId:
      value: nats-stream
    nats.clientId:
      type: fieldPath
      value: metadata.name
    jdbc.pass:
      type: secretKeyRef
      name: vdxapidb
      key: password
    nats.queue.group:
      value: PexipEvent
    nats.queue.durableName:
      value: "04062020_1430"
    mongodb.uri:
      value: mongodb://mongodb.mongo:27017/?readPreference=secondaryPreferred&replicaSet=rs0
    mongodb.database:
      value: PexipEvent
    usercontext.header.name:
      value: X-Test-Auth
    logging.level.dk.medcom.vdx.pexip:
      value: DEBUG

  readinessProbe:
    httpGet:
      path: /history/actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

docDeployment:
  enabled: true
  containerPort: 8080

  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-verify-client: optional_no_ca
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: true
    nginx.ingress.kubernetes.io/auth-url: http://testserviceaa:8787/
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header forwarded-from-nginx $ssl_client_escaped_cert;
  hosts:
    - host: pexip-sink.vdxapi.dk
      paths:
        - path: /history

    - host: pexip-sink.vdxapi.dk
      paths:
        - path: /test
          servicePort: 123
        - path: /test2

  tls:
    - hosts:
        - vdxapi.dk
      secretName: star.vdxapi.dk

extraIngress:
  internalOnly:
    annotations:
      kubernetes.io/ingress.class: nginx
      ingress.kubernetes.io/whitelist-source-range: "1.1.1.1/24"
    hosts:
      - host: booking.vconf-stage.dk
        paths:
          - path: /
            servicePort: 7070
          - path: /getsessiondata
            servicePort: 8080

    tls:
      - hosts:
          - booking.vconf-stage.dk
        secretName: booking.vconf-stage.dk

docIngress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: $1
  hosts:
    - host: docs.vdxapi.dk
      paths:
        - /medcom-vdx-pexip-history(.*)
  tls:
    - hosts:
        - docs.vdxapi.dk
      secretName: star.vdxapi.dk

service:
  port: 8080
  targetPort: proxy-port

  extraPorts:
    test:
      port: 80
      targetPort: 80


  annotations:
    prometheus.io/path: /manage/actuator/appmetrics
    prometheus.io/port: "8081"
    prometheus.io/scrape: "true"

docService:
  enabled: true
  port: 8080
  targetPort: container-port

certificate:
  urlhandler.vconf-stage.dk:
    namespace: vdx
    spec:
      secretName: urlhandler.vconf-stage.dk
      issuerRef:
        name: letsencrypt-prod
        kind: ClusterIssuer
        group: cert-manager.io
      dnsNames:
        - urlhandler.vconf-stage.dk
  vdx-urlhandler:
    namespace: vdx
    spec:
      secretName: urlhandler-client-cert
      duration: 87600h
      renewBefore: 24h
      commonName: vdx-urlhandler
      issuerRef:
        name: ca-issuer
        kind: ClusterIssuer
        group: cert-manager.io

sealedSecret:
  Mariadb:
    encryptedData:
      username: username-encrypted
      pasword: password-encrypted
  OtherSecret:
    type: Opaque
    encryptedData:
      key: AgBOQOoh7RGqTBPPSG0CtbfZD/Wh+Csl/c5HSqTzy2SoRBxh9nE4Ud4QqEAO1+S1e5VvZw2+ycpxB/272M1uxweHzzPwozFFJ6YI1zu6oG4WETU9CFCk0MBR8TOj7ng1ccR4MNJB1vJmtfkuCXrd6UDs4gYYGo+xaCHNfsVTkpVhpLrQiv/FVpfeutCOYXtTOGJ6M2a6eF7HpUijARmyIiM+nGGzjaiT4BvDE522eV1qId205WH/tti5Kgl+4iH4djZo0TG92+r3k1HcFEk3vQojTA62LFy6djmPJqreSOSEIDngSsbxhasmory0J2ehDdshCGCyaHEu3QtJ7P07WVjgwGX+G9IYrGW3tqQUohWO9+uZUOPB0Mq+K0850QeA5OfkfggOX+L6GiLR10E5JZ94Ke7QU5D0uT3IDYMkwIREUP6f3ZwLJOz4YgX4cl5tTsUOVIAFXcZsMyKXoroXmqxeoCMaam8taO+F8geEyOxqMEm3XDVxKXATfOdFIgk59to7rRNCI29pNaPdiDhX9t71ur1CRvcLqU5FYq6EZkL0Ivinj6XUsfQGXznV/8k+LfzhOmoSPtxBO4xPgcBAKHeUTokuXjnayPNSg96Goxr/v9i5FmdxcqITIsnD30XSXDFylBZ3CV
