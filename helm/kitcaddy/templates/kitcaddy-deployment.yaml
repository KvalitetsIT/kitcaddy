apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kitcaddy.fullname" . }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    {{- include "kitcaddy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
    {{- end }}
  {{- if (.Values.deploymentStrategy) }}
  strategy:
    type: {{ .Values.deploymentStrategy }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kitcaddy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "kitcaddy.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kitcaddy.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      {{- if .Values.sidecar.enabled }}
        - name: {{ .Values.sidecar.name }}
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              drop:
                - ALL
              {{- if (.Values.sidecar.securityContextAddCapabilities) }}
              add:
                {{- toYaml .Values.sidecar.securityContextAddCapabilities | nindent 16 }}
              {{- end }}
            readOnlyRootFilesystem: {{ .Values.sidecar.securityContext.readOnlyRootFilesystem }}
            allowPrivilegeEscalation: {{ .Values.sidecar.securityContext.allowPrivilegeEscalation }}
            runAsNonRoot: {{ .Values.sidecar.securityContext.runAsNonRoot }}
            seccompProfile:
              type: {{ .Values.sidecar.securityContext.seccompProfile }}
            {{- if (.Values.sidecar.securityContext.extra) }}
            {{- toYaml .Values.sidecar.securityContext.extra | nindent 12 }}
            {{- end }}
          env: {{ if (not .Values.sidecar.env) }}[]{{ end }}
          {{- range $key, $value := .Values.sidecar.env }}
          - name: {{ $key }}
          {{- if (not $value.type) }}
            value: {{ $value.value | quote }}
          {{- else if eq $value.type "fieldPath" }}
            valueFrom:
              fieldRef:
                fieldPath: {{ $value.value }}
          {{- else if eq $value.type "secretKeyRef" }}
            valueFrom:
              secretKeyRef:
                key: {{ $value.key }}
                name: {{ $value.name }}
          {{- end }}
          {{- end }}
          command: [
            {{- range $index, $cmd := .Values.sidecar.commands }}
            {{- if $index }},{{- end }}
            {{ $cmd | quote }}
            {{- end }}
          ]
          args: [
            {{- range $index, $arg := .Values.sidecar.args }}
            {{- if $index }},{{- end }}
            {{ $arg | quote }}
            {{- end }}
          ]
          {{- if (.Values.sidecar.resources) }}
          resources:
            {{- toYaml .Values.sidecar.resources | nindent 12 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.sidecar.containerPort }}
            name: sidecar-port
          {{- if (.Values.sidecar.extraVolumeMounts) }}
          volumeMounts:
          {{- end }}
          {{- range $key, $value := .Values.sidecar.extraVolumeMounts }}
            - mountPath: {{ $value.mountPath }}
              {{- /* # Remove "_<number>" at end of string */}}
              {{ $underScoreSuffix := regexFind "_\\d+$" $key }}
              {{ $newLength := int (sub (len $key) (len $underScoreSuffix)) }}
              name: {{ substr 0 $newLength $key }}
          {{- end }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            runAsUser: 11000
            runAsGroup: 11000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          args:
            - --config
            - /config/config.json
          env: []
          {{- if .Values.kitcaddy.startupProbe }}
          startupProbe:
            {{- toYaml .Values.kitcaddy.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.kitcaddy.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.kitcaddy.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.kitcaddy.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.kitcaddy.readinessProbe | nindent 12 }}
          {{- end }}
          image: "{{ .Values.kitcaddy.image.repository }}:{{ .Values.kitcaddy.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 80
              name: proxy-port
            {{- range $key, $value := .Values.kitcaddy.extraPorts }}
            - containerPort: {{ $value }}
              name: {{ $key }}
            {{- end }}
          resources:
            {{- toYaml .Values.kitcaddy.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config
              name: caddy-config
            {{- range $key, $value := .Values.kitcaddy.extraVolumeMounts }}
            - mountPath: {{ $value.mountPath}}
              {{- /* # Remove "_<number>" at end of string */}}
              {{ $underScoreSuffix := regexFind "_\\d+$" $key }}
              {{ $newLength := int (sub (len $key) (len $underScoreSuffix)) }}
              name: {{ substr 0 $newLength $key }}
              {{- if ($value.subPath) }}
              subPath: {{ $value.subPath }}
              {{- end }}
            {{- end }}

      {{- if .Values.deployment.enabled }}
        - name: {{ include "kitcaddy.fullname" . }}
          securityContext:
            capabilities:
              drop:
                - ALL
              {{- if (.Values.deployment.securityContextAddCapabilities) }}
              add:
                {{- toYaml .Values.deployment.securityContextAddCapabilities | nindent 16 }}
              {{- end }}
            readOnlyRootFilesystem: {{ .Values.deployment.securityContext.readOnlyRootFilesystem }}
            allowPrivilegeEscalation: {{ .Values.deployment.securityContext.allowPrivilegeEscalation }}
            runAsNonRoot: {{ .Values.deployment.securityContext.runAsNonRoot }}
            seccompProfile:
              type: {{ .Values.deployment.securityContext.seccompProfile }}
            {{- if (.Values.deployment.securityContext.extra) }}
            {{- toYaml .Values.deployment.securityContext.extra | nindent 12 }}
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env: {{ if (not .Values.deployment.env) }}[]{{ end }}

            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key }}
            {{- if (not $value.type) }}
              value: {{ $value.value | quote }}
            {{- else if eq $value.type "fieldPath" }}
              valueFrom:
                fieldRef:
                  fieldPath: {{ $value.value }}
            {{- else if eq $value.type "secretKeyRef" }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value.key }}
                  name: {{ $value.name }}
            {{- end }}
            {{- end }}
          ports:
            - name: container-port
              containerPort: {{ .Values.deployment.containerPort }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          {{- if (.Values.deployment.configMapMountPath) }}
            - mountPath: {{ .Values.deployment.configMapMountPath }}
              name: caddy-config
          {{- end }}
          {{- range $key, $value := .Values.deployment.extraVolumeMounts }}
            - mountPath: {{ $value.mountPath }}
              {{- /* # Remove "_<number>" at end of string */}}
              {{ $underScoreSuffix := regexFind "_\\d+$" $key }}
              {{ $newLength := int (sub (len $key) (len $underScoreSuffix)) }}
              name: {{ substr 0 $newLength $key }}
              {{- if ($value.subPath) }}
              subPath: {{ $value.subPath }}
              {{- end }}
          {{- end }}

          {{- if (.Values.deployment.livenessProbe) }}
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if (.Values.deployment.readinessProbe) }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          {{- end }}

          {{- if (.Values.deployment.startupProbe) }}
          startupProbe:
            {{- toYaml .Values.deployment.startupProbe | nindent 12 }}
          {{- end }}          

          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      {{- end }}

      {{- if (.Values.initContainers) }}
      initContainers:
      {{- end }}
      {{- range $key, $value := .Values.initContainers }}
        - name: {{ $key }}
          image: "{{ $value.image.repository }}:{{ $value.image.tag }}"
          env: {{ if (not $value.env) }}[ ]{{ end }}
            {{- range $key, $value := $value.env }}
            - name: {{ $key }}
            {{- if (not $value.type) }}
              value: {{ $value.value | quote }}
            {{- else if eq $value.type "fieldPath" }}
              valueFrom:
                fieldRef:
                fieldPath: {{ $value.value }}
            {{- else if eq $value.type "secretKeyRef" }}
              valueFrom:
                secretKeyRef:
                  key: {{ $value.key }}
                  name: {{ $value.name }}
            {{- end }}
            {{- end }}
          command: [
            {{- range $index, $cmd := $value.commands }}
            {{- if $index }},{{- end }}
            {{ $cmd | quote }}
            {{- end }}
          ]
          args: [
            {{- range $index, $arg := $value.args }}
            {{- if $index }},{{- end }}
            {{ $arg | quote }}
            {{- end }}
          ]
          {{- if ($value.resources)}}
          resources:
            {{- toYaml $value.resources | nindent 12 }}
          {{- end }}
          {{- if or ($value.configMapMountPaths) ($value.extraVolumeMounts) }}
          volumeMounts:
          {{- end }}
          {{- range $key, $value := $value.configMapMountPaths }}
            - mountPath: {{ $value.configMapMountPath }}
              name: configmap
              {{- if ($value.configMapMountSubPath) }}
              subPath: {{ $value.configMapMountSubPath }}
              {{- end }}
          {{- end }}
          {{- range $key, $value := $value.extraVolumeMounts }}
            - mountPath: {{ $value.mountPath }}
              {{- /* # Remove "_<number>" at end of string */}}
              {{ $underScoreSuffix := regexFind "_\\d+$" $key }}
              {{ $newLength := int (sub (len $key) (len $underScoreSuffix)) }}
              name: {{ substr 0 $newLength $key }}
              {{- if ($value.subPath) }}
              subPath: {{ $value.subPath }}
              {{- end }}
          {{- end }}
      {{- end }}

      volumes:
        - emptyDir: {}
          name: tmp
        - configMap:
            name: {{ include "kitcaddy.fullname" . }}-config
          name: caddy-config
        {{- range $key, $value := .Values.kitcaddy.extraVolumes }}
        - name: {{$key}}
          {{- tpl . $ | nindent 10 -}}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "master" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "master" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
